Report for Lab 3
----------------

Answer the questions from the lab description here.  Questions 8 and 9 do not require answers.

1. The classes are MockScan, Operator, SeqScan, and TupleIterator.

2. Subclasses: Aggregate, Delete, Filter, Insert, Join, OrderBy, and Project.

3. Select (Filter), projection (Project), and join (Join) is supported
	 as subclasses of Operator.
	 
4. Filter extends Operator; in Operator, hasNext() and next() is handled
	 (implemented) by fetchNext(), which is implemented in Filter.
	 
5. Here is a pseudocode implementation of Filter using pipelining:
	 curr <- null
	 while iterR.hasNext do
	 	 curr <- iterR.next
	 	 if curr matches predicate do
	 	 	 exit while
	 	 end if
	 end while
	 return curr
	 
6. Here is a pseudocode implementation using iterators:
	 list <- []
	 while iterR.hasNext do
	 	 currR <- iterR.next
	 	 while iterS.hasNext do
	 	 	 currS <- iterS.next
	 	 	 if currR and currS match predicate do
	 	 	 	 RSmerge <- merge(currR, currS)
	 	 	 	 list.append(RSmerge)
	 	 	 end if
	 	 end while
	 	 iterS.rewind
	 end while
	 return list

7. Here is a pseudocode implementation using pipelining and iterators:
	 if NOT(iterR.hasNext) AND NOT(iterS.hasNext) do
	 	 if t1 == null OR NOT(t1 and t2 match predicate) do
	 	 	 return null
	 	 else if t1 and t2 match predicate do
	 	 	 return merge(t1, t2)
	 	 end if
	 end if
	 
	 while TRUE
	 	 if t1 == null AND iterR.hasNext do
	 	 	 t1 <- iterR.next
	 	 end if
	 	 while iterS.hasNext do
	 	 	 t2 <- iterS.next
	 	 	 if t1 and t2 match predicate do
	 	 	 	 return merge(t1, t2)
	 	 	 end if
	 	 end while
	 	 iterS.rewind
	 	 if iterR.hasNext do
	 	 	 t1 <- iterR.next
	 	 else do
	 	 	 exit while
	 	 end if
	 end while
	 	 
8, 9 works (mentally for me) when I try them out.

After you complete lab 3, please answer the following questions.  

1. What is your name?  If you work with a partner, be sure to write both of your names.

Yuxin David Huang (me), Jiayang (JY) Li

2. What did you think of this assignment?



3. What was the hardest part of this assignment?



4. Describe any missing or incomplete elements of your code.



5. Roughly how long did you spend working on this lab?



